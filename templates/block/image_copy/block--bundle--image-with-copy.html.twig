{#
/**
* @file
* Theme override to display a block.
*
* Available variables:
* - plugin_id: The ID of the block implementation.
* - label: The configured label of the block if visible.
* - configuration: A list of the block's configuration values.
*   - label: The configured label for the block.
*   - label_display: The display settings for the label.
*   - provider: The module or other provider that provided this block plugin.
*   - Block plugin specific settings will also be stored here.
* - content: The content of this block.
* - attributes: array of HTML attributes populated by modules, intended to
*   be added to the main container tag of this template.
*   - id: A valid HTML ID and guaranteed unique.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
*
* @see template_preprocess_block()
*/

{# Attach the library. #}
{{ attach_library('gt/image-copy') }}

{# Preprocess #}
{% set body = (content.body) %}
{% set button = 'm-1 btn btn-primary-' ~ color_button %}
{% set fluid_image = (content.field_image.0['#item'].entity.uri.value) ? (file_url(content.field_image.0['#item'].entity.uri.value)) : '' %}
{% set image_alt = (content.field_image.0['#item'].alt ) %}
{% set image_path = (content.field_image['#items'].entity.uri.value) ? (file_url(content.field_image['#items'].entity.uri.value)) : '' %}
{% set image_style = (content.field_image_style.0) %}
{% set link_url = file_url(content.field_link.0['#url']|render) %}
{% set link_title = (content.field_link[0]['#title']|render) %}
{% set text_color = 'card-body gt-text-' ~ color_text %}
{% set text_alignment = (content.field_text_alignment.0) %}
{% set video = (content.field_video_url.0) %}

{# Depending on the action, set the appropriate action class. #}
{% if color_background is not empty %}
  {% set background_class = 'gt-' ~ color_background %}
{% else %}
  {% set background_class = '' %}
{% endif %}

{# Set CSS Container Classes #}
{% set container_classes = [
  'my-3',
  'mb-4',
  'w-100',
  'block',
  'block-' ~ configuration.provider|clean_class,
  'block-' ~ plugin_id|clean_class,
  'clearfix'
] %}

{# Set Card CSS classes. #}
{% set card_classes = [
  'mx-auto',
  'card',
  'card-transparent',
] %}

{# Content #}
<div{{ attributes.setAttribute('id', 'superblock').addClass(container_classes, background_class, alignment, card_classes|join(' ')) }}>

  {# Video #}
  {% if video is not empty %}
    <div id="card-media" class="card-img-top">
      {{ video }}
    </div>
    {#  Image with Link #}
  {% elseif image_path != '/' and content.field_link.0['#url'] is not empty %}
    <div id="card-media">
      <a href="{{ link_url }}">
        <img class="{{ image_style }} card-img-top" src="{{ image_path }}" alt="{{ image_alt }}">
      </a>
    </div>
    {# Image Only #}
  {% elseif image_path != '/' and content.field_link.0['#url'] is empty %}
    <div id="card-media">
      <img class="{{ image_style }} card-img-top" src="{{ image_path }}" alt="{{ image_alt }}">
    </div>
  {% else %}
  {% endif %}

  <div class="card-body {{ text_color }} {{ text_alignment }} w-100 px-3 pt-3 pb-3">
    {# Title #}
    {{ title_prefix }}
    {% if label %}
      <h3{{ title_attributes }}>{{ label }}</h3>
    {% endif %}
    {{ title_suffix }}
    {# Body #}
    {% if body %}
      {{ body }}
    {% else %}
    {% endif %}
  </div>

  {# Link #}
  {% if link_title %}
    <div class="card-footer w-100 mx-3 my-3">
      <a class="{{ button }}" aria-labelledby="{{ link_title }}" href="{{ link_url }}">{{ link_title }}</a>
    </div>
  {% else %}
  {% endif %}

</div>
